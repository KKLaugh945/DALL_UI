<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:s="clr-namespace:DALL_UI" 
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">
    <!--連接後方數據-->
    <s:Drawstyle x:Key="Datacontrol"/>

    <!--試畫畫圖設定-->
    <!--應用於物件繪製於物件宣告-->
    <Style TargetType="{x:Type Shape}" x:Key="DrawShow">
        <Setter Property="Fill"  Value="{Binding Source={StaticResource Datacontrol},Path=InteractiveColor}"/>
    </Style>

    <Style TargetType="{x:Type Shape}" x:Key="DrawPahtShow">
        <Setter Property="Stroke" Value="{Binding Source={StaticResource Datacontrol},Path=InteractiveColor}"/>
        <Setter Property="StrokeThickness" Value="5"/>
    </Style>

    <!--progressbar的外觀造型-->
    <Style TargetType="{x:Type ProgressBar}" x:Key="ProgressBarStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ProgressBar">
                    <Border BorderBrush="{Binding Source={StaticResource Datacontrol},Path=SecondaryBaseColor}" BorderThickness="3" 
                            Background="{Binding Source={StaticResource Datacontrol},Path=BackgroundColor}" CornerRadius="1" Padding="0">
                        <Grid x:Name="PART_Track">
                            <Rectangle x:Name="PART_Indicator" HorizontalAlignment="Left" Fill="{Binding Source={StaticResource Datacontrol},Path=InteractiveColor}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--制定所有字體style-->
    <Style TargetType="{x:Type Control}" x:Key="FontStyle">
        <Setter Property="FontSize" Value="{Binding Source={StaticResource Datacontrol},Path=FontSize}"/>
        <Setter Property="Foreground" Value="{Binding Source={StaticResource Datacontrol},Path=FontColor}"/>
    </Style>

    <!--設定背景顏色-->
    <Style TargetType="{x:Type Grid}" x:Key="BackGroundSet">
        <Setter Property="Background" Value="{Binding Source={StaticResource Datacontrol},Path=SecondaryBaseColor}"/>
    </Style>

    <!--textblock的外觀設定-->
    <Style TargetType="{x:Type TextBlock}" x:Key="FontSize">
        <Setter Property="FontSize" Value="{Binding Source={StaticResource Datacontrol},Path=FontSize}"/>
        <Setter Property="Foreground" Value="{Binding Source={StaticResource Datacontrol},Path=FontColor}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="StarisStyle" BasedOn="{StaticResource FontSize}">
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Height" Value="auto"/>
        <Setter Property="Background" Value="{Binding Source={StaticResource Datacontrol},Path=StairColor}"/>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="InputObjectString" BasedOn="{StaticResource FontSize}">
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Height" Value="auto"/>
        <Setter Property="Foreground" Value="{Binding Source={StaticResource Datacontrol},Path=BackgroundColor}"/>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="TextBlockStyle" BasedOn="{StaticResource FontSize}">
        <Setter Property="Height" Value="{Binding Source={StaticResource Datacontrol},Path=SizeSet}"/>
        <Setter Property="Margin" Value="{Binding Source={StaticResource Datacontrol},Path=MarginSize}"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>

    <!--設定textbox的外觀-->
    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource FontStyle}" x:Key="TextboxStyle">
        <Setter Property="Height" Value="{Binding Source={StaticResource Datacontrol},Path=SizeSet}"/>
        <Setter Property="Margin" Value="{Binding Source={StaticResource Datacontrol},Path=MarginSize}"/>
        <Setter Property="Background" Value="{Binding Source={StaticResource Datacontrol},Path=BackgroundColor}"/>
        <Setter Property="BorderBrush" Value="{Binding Source={StaticResource Datacontrol},Path=SecondaryBaseColor}"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
    </Style>

    <Style  TargetType="{x:Type TextBox}" BasedOn="{StaticResource TextboxStyle}"/>
    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource TextboxStyle}" x:Key="{x:Static ToolBar.TextBoxStyleKey}"/>

    <Style TargetType="{x:Type PasswordBox}" BasedOn="{StaticResource FontStyle}">
        <Setter Property="Height" Value="{Binding Source={StaticResource Datacontrol},Path=SizeSet}"/>
        <Setter Property="Margin" Value="{Binding Source={StaticResource Datacontrol},Path=MarginSize}"/>
        <Setter Property="Background" Value="{Binding Source={StaticResource Datacontrol},Path=BackgroundColor}"/>
        <Setter Property="BorderBrush" Value="{Binding Source={StaticResource Datacontrol},Path=SecondaryBaseColor}"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
    </Style>

    <!--設定按鈕的margin-->
    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource FontStyle}" x:Key="GetButtonStyle">
        <Setter Property="Margin" Value="{Binding Source={StaticResource Datacontrol},Path=MarginSize}"/>
        <Setter Property="Background" Value="{Binding Source={StaticResource Datacontrol},Path=SecondaryBaseColor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border CornerRadius="2" Background="{TemplateBinding Background}" x:Name="MainBorder" />
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="2"/>
                        <Border CornerRadius="2" x:Name="ButtonSelect" Opacity=".3" Visibility="Hidden" Background="{Binding Source={StaticResource Datacontrol},Path=InteractiveColor}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ButtonSelect" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="MainBorder" Property="Background" Value="{Binding Source={StaticResource Datacontrol},Path=InteractiveColor}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ButtonSelect" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ButtonSelect" Property="Background" Value="{Binding Source={StaticResource Datacontrol},Path=BackgroundColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--設定按鈕高度-->
    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource GetButtonStyle}" x:Key="SetButtonHeight">
        <Setter Property="Height" Value="{Binding Source={StaticResource Datacontrol},Path=SizeSet}"/>
    </Style>
    
    <!--獲得方正的按鈕-->
    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource SetButtonHeight}" x:Key="SetSquarButton">
        <Setter Property="Width" Value="{Binding Source={StaticResource Datacontrol},Path=SizeSet}"/>
    </Style>

    <!--給予畫面抓取按鈕type用-->
    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource GetButtonStyle}" x:Key="{x:Static ToolBar.ButtonStyleKey}">
        <Setter Property="Margin" Value="2"/>
    </Style>

    <!--togglebutton設定-->
    <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource FontStyle}" x:Key="GetToggleStyle">
        <Setter Property="Background" Value="{Binding Source={StaticResource Datacontrol},Path=SecondaryBaseColor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <Border Background="{TemplateBinding Background}" CornerRadius="2" Name="mothrboard">
                            <ContentPresenter Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <Border Background="{Binding Source={StaticResource Datacontrol},Path=InteractiveColor}" Opacity=".3" Visibility="Hidden" Name="Selected"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Selected" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Selected" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="mothrboard" Property="Background" Value="{Binding Source={StaticResource Datacontrol},Path=InteractiveColor}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Selected" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="Selected" Property="Background" Value="{Binding Source={StaticResource Datacontrol},Path=BackgroundColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource GetToggleStyle}" x:Key="{x:Static ToolBar.ToggleButtonStyleKey}">
        <Setter Property="Margin" Value="2"/>
    </Style>

    <Style TargetType="{x:Type RadioButton}" BasedOn="{StaticResource GetToggleStyle}" x:Key="{x:Static ToolBar.RadioButtonStyleKey}">
        <Setter Property="Margin" Value="2"/>
    </Style>

    <Style TargetType="{x:Type RadioButton}" BasedOn="{StaticResource GetToggleStyle}" x:Key="SetRadioToToggle">
        <Setter Property="Margin" Value="{Binding Source={StaticResource Datacontrol},Path=MarginSize}"/>
        <Setter Property="Height" Value="{Binding Source={StaticResource Datacontrol},Path=SizeSet}"/>
    </Style>

    <!--設定顏色的margin的-->
    <Style TargetType="{x:Type Border}" x:Key="BorderMarginStyle">
        <Setter Property="Margin" Value="{Binding Source={StaticResource Datacontrol},Path=MarginSize}"/>
        <Setter Property="BorderThickness" Value="2"/>
    </Style>
    
    <!--設定可拖曳的spliter-->
    <Style TargetType="{x:Type GridSplitter}" x:Key="GridSplitterStyle">
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Background" Value="{Binding Source={StaticResource Datacontrol},Path=InteractiveColor}"/>
    </Style>
    
    <!--橫向拖曳的spliter-->
    <Style TargetType="{x:Type GridSplitter}" x:Key="GridSplitterStyle_Horizontal" BasedOn="{StaticResource GridSplitterStyle}">
        <Setter Property="Margin" Value="{Binding Source={StaticResource Datacontrol},Path=HorizontalMargin}"/>
    </Style>

    <!--直向拖曳的spliter-->
    <Style TargetType="{x:Type GridSplitter}" x:Key="GridSplitterStyle_Vertical" BasedOn="{StaticResource GridSplitterStyle}">
        <Setter Property="Margin" Value="{Binding Source={StaticResource Datacontrol},Path=VerticalMargin}"/>
    </Style>
    
    <!--設定tabcontrol的字體大小-->
    <Style TargetType="{x:Type TabControl}">
        <Setter Property="FontSize" Value="{Binding Source={StaticResource Datacontrol},Path=FontSize}"/>
        <Setter Property="Foreground" Value="{Binding Source={StaticResource Datacontrol},Path=FontColor}"/>
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <DockPanel KeyboardNavigation.TabNavigation="Local" LastChildFill="True">
                        <TabPanel DockPanel.Dock="{TemplateBinding TabStripPlacement}"
                        Name="HeaderPanel"
                        Grid.Row="0"
                        Panel.ZIndex="1" 
                        Margin="0,1,4,0" 
                        IsItemsHost="True"
                        KeyboardNavigation.TabIndex="1"
                        Background="Transparent" />
                        <Border 
                        Name="Border" 
                        Background="Transparent"
                        Margin="0,-0.5,0,0" 
                        BorderThickness="1"
                        BorderBrush="{Binding Source={StaticResource Datacontrol},Path=SecondaryBaseColor}">
                            <ContentPresenter ContentSource="SelectedContent" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
                        </Border>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{Binding Source={StaticResource Datacontrol},Path=FontColor}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{Binding Source={StaticResource Datacontrol},Path=BackgroundColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--https://stackoverflow.com/questions/1506568/wpf-tabitem-header-styling-->
    <Style TargetType="{x:Type TabItem}">
        <Setter Property="Foreground" Value="{Binding Source={StaticResource Datacontrol},Path=FontColor}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid>
                        <Border Name="Border" Margin="0,0,0,0" Background="Transparent"
                  BorderBrush="{Binding Source={StaticResource Datacontrol},Path=SecondaryBaseColor}" BorderThickness="1,1,1,1">
                            <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center"
                              HorizontalAlignment="Center"
                              ContentSource="Header" 
                              Margin="12,2,12,2"
                              RecognizesAccessKey="True">
                            </ContentPresenter>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Panel.ZIndex" Value="100" />
                            <Setter TargetName="Border" Property="Background" Value="{Binding Source={StaticResource Datacontrol},Path=InteractiveColor}"/>
                            <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,0" />
                            <Setter Property="Foreground" Value="Black"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{Binding Source={StaticResource Datacontrol},Path=BackgroundColor}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{Binding Source={StaticResource Datacontrol},Path=SecondaryBaseColor}" />
                            <Setter Property="Foreground" Value="DarkGray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--針對ratiobutton進行外觀設定-->
    <Style TargetType="{x:Type RadioButton}" BasedOn="{StaticResource FontStyle}" x:Key="RatiobuttonStyle">
        <Setter Property="Margin" Value="{Binding Source={StaticResource Datacontrol},Path=MarginSize}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    
    <!--針對圖示進行進行marging設定-->
    <Style TargetType="{x:Type Image}" x:Key="ImageStyle">
        <Setter Property="Margin" Value="{Binding Source={StaticResource Datacontrol},Path=HorizontalMargin}"/>
        <Setter Property="Grid.ColumnSpan" Value="2"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>
    
    <!--設定垂直splitter的設定-->
    <Style TargetType="{x:Type RowDefinition}" x:Key="RowDefinitionSpliterStyle">
        <Setter Property="Height" Value="{Binding Source={StaticResource Datacontrol},Path=SpiltterWidth}"/>
    </Style>

    <!--設定水平splitter的設定-->
    <Style TargetType="{x:Type ColumnDefinition}" x:Key="ColumnDefinitionSpliterStyle">
        <Setter Property="Width" Value="{Binding Source={StaticResource Datacontrol},Path=SpiltterWidth}"/>
    </Style>

    <!--Menu的外觀設定-->
    <Style BasedOn="{StaticResource FontStyle}" TargetType="{x:Type Menu}">
        <Setter Property="Background" Value="{Binding Source={StaticResource Datacontrol},Path=SecondaryBaseColor}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    
    <!--針對下層item做外觀設定-->
    <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource FontStyle}">
        <Setter Property="Background" Value="{Binding Source={StaticResource Datacontrol},Path=SecondaryBaseColor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border x:Name="Border"  Background="{TemplateBinding Background}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="ColIcon" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
                                <ColumnDefinition Width="Auto" SharedSizeGroup="MenuTextColumnGroup"/>
                                <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
                                <ColumnDefinition x:Name="ColNext" Width="auto"/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter Grid.Column="0"
                                                  Margin="5 0"
                                                  x:Name="Icon"
                                                  VerticalAlignment="Center" 
                                                  ContentSource="Icon" Width="18" Height="18"/>
                            <Grid Grid.Column="0" 
                                      Visibility="Hidden" 
                                      Margin="5 0" 
                                      x:Name="GlyphPanel"
                                      VerticalAlignment="Center">
                                <Viewbox VerticalAlignment="Center" FlowDirection="LeftToRight" Width="18" Height="18">
                                    <Path Fill="{TemplateBinding Foreground}" Data="M422.36247 839.786465c-13.320377 13.421684-34.909068 13.421684-48.126091 0l-10.69355-10.800997 0 0-11.398608-11.502985-50.145074-50.544163c-0.097214-0.201591 0-0.500397-0.201591-0.604774L72.380494 533.085224c-13.320377-13.421684-13.320377-35.218106 0-48.535413l72.132854-72.842005c13.319353-13.408381 34.907021-13.408381 48.224328 0l205.814506 209.252815L831.363631 184.208419c13.218046-13.414521 34.806737-13.414521 48.124044 0l72.134901 72.842005c13.317307 13.408381 13.317307 35.113729 0 48.52211L422.36247 839.786465 422.36247 839.786465z"/>
                                </Viewbox>
                            </Grid>
                            <ContentPresenter Grid.Column="1"
                                          Margin="{TemplateBinding Padding}"
                                          x:Name="HeaderHost"
                                          VerticalAlignment="Center"
                                          RecognizesAccessKey="True"
                                          ContentSource="Header"/>
                            <ContentPresenter Grid.Column="2"
                                          Margin="8 0"
                                          x:Name="IGTHost"
                                          ContentSource="InputGestureText"
                                          VerticalAlignment="Center"/>
                            <Grid Grid.Column="3" Margin="5 0" x:Name="ArrowPanel" VerticalAlignment="Center">
                                <Path x:Name="ArrowPanelPath" HorizontalAlignment="Right" VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" Data="M0,0 L0,8 L4,4 z"/>
                            </Grid>
                            <Popup IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                       Placement="Right" 
                                       x:Name="SubMenuPopup" 
                                       Focusable="false">
                                <Border x:Name="SubMenuBorder" BorderBrush="#999999" Background="{TemplateBinding Background}" BorderThickness="1" Padding="2,2,2,2">
                                    <Grid x:Name="SubMenu" Grid.IsSharedSizeScope="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                                    </Grid>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Role" Value="TopLevelHeader">
                            <Setter Property="Padding" Value="6 1"/>
                            <Setter Property="Background" Value="{Binding Source={StaticResource Datacontrol},Path=SecondaryBaseColor}"/>
                            <Setter Property="Placement" Value="Bottom" TargetName="SubMenuPopup"/>
                            <Setter Property="MinWidth" Value="0" TargetName="ColIcon"/>
                            <Setter Property="Width" Value="Auto" TargetName="ColNext"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="GlyphPanel"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="IGTHost"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
                        </Trigger>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter Property="Background" Value="{Binding Source={StaticResource Datacontrol},Path=InteractiveColor}" TargetName="Border"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsHighlighted" Value="True"/>
                                <Condition Property="Role" Value="TopLevelHeader"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Background" Value="{Binding Source={StaticResource Datacontrol},Path=InteractiveColor}" TargetName="Border"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <Trigger Property="Role" Value="TopLevelItem">
                            <Setter Property="Padding" Value="6 1"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
                        </Trigger>
                        <Trigger Property="Role" Value="SubmenuHeader">
                            <Setter Property="Padding" Value="5 2"/>
                        </Trigger>
                        <Trigger Property="Role" Value="SubmenuItem">
                            <Setter Property="Padding" Value="5 2"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
                        </Trigger>
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Visibility" Value="Visible" TargetName="GlyphPanel"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{Binding Source={StaticResource Datacontrol},Path=BackgroundColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--分割線外觀控制-->
    <Style TargetType="{x:Type Separator}" x:Key="SeparatorStyle">
        <Setter Property="Background" Value="{Binding Source={StaticResource Datacontrol},Path=BackgroundColor}"/>
    </Style>

    <Style TargetType="{x:Type Separator}" BasedOn="{StaticResource SeparatorStyle}" x:Key="{x:Static ToolBar.SeparatorStyleKey}"/>
    <Style TargetType="{x:Type Separator}" BasedOn="{StaticResource SeparatorStyle}" x:Key="{x:Static MenuItem.SeparatorStyleKey}"/>

    <!--列出來的toolarray外觀設定-->
    <Style TargetType="{x:Type ToolBarTray}">
        <Setter Property="Background" Value="{Binding Source={StaticResource Datacontrol},Path=SecondaryBaseColor}"/>
    </Style>

    <Style TargetType="{x:Type ToolBar}">
        <Setter Property="Background" Value="{Binding Source={StaticResource Datacontrol},Path=SecondaryBaseColor}"/>
        <Setter Property="BorderBrush" Value="{Binding Source={StaticResource Datacontrol},Path=SecondaryBaseColor}"/>
    </Style>

    <!--combobox的外觀設定-->
    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border
                  x:Name="Border" 
                  Grid.ColumnSpan="2"
                  CornerRadius="0"
                  Background="{Binding Source={StaticResource Datacontrol},Path=BackgroundColor}"
                  BorderBrush="{Binding Source={StaticResource Datacontrol},Path=SecondaryBaseColor}"
                  BorderThickness="1" />
            <Border 
                  Grid.Column="0"
                  CornerRadius="0" 
                  Margin="1" 
                  Background="{Binding Source={StaticResource Datacontrol},Path=BackgroundColor}"
                  BorderBrush="{Binding Source={StaticResource Datacontrol},Path=SecondaryBaseColor}"
                  BorderThickness="0,0,1,0" />
            <Path 
                  x:Name="Arrow"
                  Grid.Column="1"     
                  Fill="{Binding Source={StaticResource Datacontrol},Path=SecondaryBaseColor}"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="Arrow" Property="Fill" Value="{Binding Source={StaticResource Datacontrol},Path=InteractiveColor}" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter TargetName="Arrow" Property="Data" Value="M0,0 L0,-2 L4,-6 L8,-2 L8,0 L4,-4 z"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="{Binding Source={StaticResource Datacontrol},Path=SecondaryBaseColor}"/>
                <Setter Property="Foreground" Value="{Binding Source={StaticResource Datacontrol},Path=SecondaryBaseColor}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
    </ControlTemplate>

    <Style x:Key="ComboBoxStyle" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource FontStyle}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="Background" Value="{Binding Source={StaticResource Datacontrol},Path=BackgroundColor}"/>
        <Setter Property="Margin" Value="{Binding Source={StaticResource Datacontrol},Path=MarginSize}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton 
                            Name="ToggleButton" 
                            Template="{StaticResource ComboBoxToggleButton}" 
                            Grid.Column="2" 
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press"/>
                        <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="3,3,23,3"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left" />
                        <TextBox x:Name="PART_EditableTextBox"
                            Template="{StaticResource ComboBoxTextBox}" 
                            FontSize="{Binding Source={StaticResource Datacontrol},Path=FontSize}"
                            Style="{StaticResource TextboxStyle}"
                            HorizontalAlignment="Left" 
                            VerticalAlignment="Center" 
                            Margin="3,3,23,3"
                            Focusable="True" 
                            Background="{TemplateBinding Background}"
                            Visibility="Hidden"
                            IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup 
                            Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True" 
                            Focusable="False"
                            PopupAnimation="Slide">

                            <Grid Name="DropDown"
                              SnapsToDevicePixels="True"                
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border 
                                x:Name="DropDownBorder"
                                Background="{TemplateBinding Background}"
                                BorderThickness="1"
                                BorderBrush="{Binding Source={StaticResource Datacontrol},Path=SecondaryBaseColor}"/>
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{Binding Source={StaticResource Datacontrol},Path=SecondaryBaseColor}"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,1,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEditable"  Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ComboBoxItem}" BasedOn="{StaticResource FontStyle}">
        <Setter Property="Background" Value="{Binding Source={StaticResource Datacontrol},Path=BackgroundColor}"/>
        <Setter Property="BorderBrush" Value="{Binding Source={StaticResource Datacontrol},Path=BackgroundColor}"/>
    </Style>

    <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource ComboBoxStyle}" x:Key="{x:Static ToolBar.ComboBoxStyleKey}"/>
    <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource ComboBoxStyle}"/>

    <Style TargetType="{x:Type StatusBar}">
        <Setter Property="Background" Value="{Binding Source={StaticResource Datacontrol},Path=InteractiveColor}"/>
    </Style>
    
    <!--propertybox的title border顏色-->
    <Style TargetType="{x:Type Border}" x:Key="BorderBackgroundStyle">
        <Setter Property="Background" Value="{Binding Source={StaticResource Datacontrol},Path=SecondaryBaseColor}"/>
    </Style>

    <!--展開頁面-->
    <!--https://www.codeproject.com/Articles/248112/Templating-WPF-Expander-Control-->
    <s:MultiplyConverter x:Key="multiplyConverter" />
    <Style TargetType="{x:Type Expander}">
        <Setter Property="Background" Value="{Binding Source={StaticResource Datacontrol},Path=BackgroundColor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <DockPanel>
                        <ToggleButton x:Name="ExpanderButton"
                            DockPanel.Dock="Top"
                            Style="{StaticResource GetToggleStyle}"
                            Content="{TemplateBinding Header}"
                            IsChecked="{Binding Path=IsExpanded, 
                            RelativeSource={RelativeSource TemplatedParent}}"
                            OverridesDefaultStyle="True"
                            Padding="1.5,0">
                        </ToggleButton>
                        <ScrollViewer x:Name="ExpanderContentScrollView" DockPanel.Dock="Bottom"
                            HorizontalScrollBarVisibility="Hidden"
                            VerticalScrollBarVisibility="Hidden"
                            HorizontalContentAlignment="Stretch"
                            VerticalContentAlignment="Bottom">
                            <ScrollViewer.Tag>
                                <sys:Double>0.0</sys:Double>
                            </ScrollViewer.Tag>
                            <ScrollViewer.Height>
                                <MultiBinding Converter="{StaticResource multiplyConverter}">
                                    <Binding Path="ActualHeight" ElementName="ExpanderContent"/>
                                    <Binding Path="Tag" RelativeSource="{RelativeSource Self}" />
                                </MultiBinding>
                            </ScrollViewer.Height>
                            <ContentPresenter x:Name="ExpanderContent" ContentSource="Content"/>
                        </ScrollViewer>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation 
                                            Storyboard.TargetName="ExpanderContentScrollView"
                                            Storyboard.TargetProperty="Tag"
                                            To="1"
                                            Duration="0:0:0.4"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation 
                                            Storyboard.TargetName="ExpanderContentScrollView"
                                            Storyboard.TargetProperty="Tag"
                                            To="0"
                                            Duration="0:0:0.4"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--設定圖層跟路徑單位外觀-->
    <Style TargetType="{x:Type UserControl}" x:Key="ItemStyle">
        <Setter Property="BorderThickness" Value="3"/>
        <Setter Property="Margin" Value="{Binding Source={StaticResource Datacontrol},Path=VerticalMargin}" />
    </Style>

    <!--視窗外觀-->
    <Style TargetType="{x:Type Window}" BasedOn="{StaticResource SWWindowStyle}" x:Key="WindowStyle">
        <Setter Property="Foreground" Value="{Binding Source={StaticResource Datacontrol},Path=FontColor}" />
        <Setter Property="Background" Value="{Binding Source={StaticResource Datacontrol},Path=BackgroundColor}" />
        <Setter Property="BorderBrush" Value="{Binding Source={StaticResource Datacontrol},Path=SecondaryBaseColor}" />
    </Style>
    
    <!--樹狀圖的列表字體外觀設定-->
    <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource FontStyle}"/>
    
    <Style TargetType="{x:Type TreeView}">
        <Setter Property="BorderBrush" Value="{Binding Source={StaticResource Datacontrol},Path=SecondaryBaseColor}" />
    </Style>

    <!--listview style-->
    <Style TargetType="{x:Type ListView}">
        <Setter Property="Background" Value="{Binding Source={StaticResource Datacontrol},Path=BackgroundColor}" />
    </Style>

    <Style TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="Background" Value="{Binding Source={StaticResource Datacontrol},Path=SecondaryBaseColor}" />
    </Style>

    <!--資料顯示物件內容row內容-->
    <Style TargetType="{x:Type ListViewItem}">
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                        <GridViewRowPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{Binding Source={StaticResource Datacontrol},Path=SecondaryBaseColor}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{Binding Source={StaticResource Datacontrol},Path=InteractiveColor}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!--listbox style-->
    <Style TargetType="{x:Type ListBox}">
        <Setter Property="Background" Value="{Binding Source={StaticResource Datacontrol},Path=BackgroundColor}" />
        <Setter Property="BorderBrush" Value="{Binding Source={StaticResource Datacontrol},Path=SecondaryBaseColor}" />
    </Style>
    <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource FontStyle}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border Name="Border" Background="Transparent" Padding="7" SnapsToDevicePixels="True">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ListBoxItem.IsSelected" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{Binding Source={StaticResource Datacontrol},Path=InteractiveColor}" />
                        </Trigger>
                        <Trigger Property="ListBoxItem.IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{Binding Source={StaticResource Datacontrol},Path=SecondaryBaseColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--DatePicker style-->
    <Style x:Key="DatePickerCalendarStyle"
       TargetType="{x:Type Calendar}"
       BasedOn="{StaticResource {x:Type Calendar}}" />

    <!--The template for the button that displays the calendar.-->
    <Style x:Key="DropDownButtonStyle"
       TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                    <VisualTransition GeneratedDuration="0:0:0.1"
                                  To="MouseOver" />
                                    <VisualTransition GeneratedDuration="0:0:0.1"
                                  To="Pressed" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames BeginTime="0"
                                                Duration="00:00:00.001"
                                                Storyboard.TargetName="BackgroundGradient"
                                                Storyboard.TargetProperty="(Border.Background).
                    (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0"
                                         Value="#F2FFFFFF" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames BeginTime="0"
                                                Duration="00:00:00.001"
                                                Storyboard.TargetName="BackgroundGradient"
                                                Storyboard.TargetProperty="(Border.Background).
                    (GradientBrush.GradientStops)[2].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0"
                                         Value="#CCFFFFFF" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimation Duration="0"
                                  To="#FF448DCA"
                                  Storyboard.TargetProperty="(Border.Background).
                            (SolidColorBrush.Color)"
                                  Storyboard.TargetName="Background" />
                                        <ColorAnimationUsingKeyFrames BeginTime="0"
                                                Duration="00:00:00.001"
                                                Storyboard.TargetName="BackgroundGradient"
                                                Storyboard.TargetProperty="(Border.Background).
                    (GradientBrush.GradientStops)[3].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0"
                                         Value="#7FFFFFFF" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames BeginTime="0"
                                                Duration="00:00:00.001"
                                                Storyboard.TargetName="Background"
                                                Storyboard.TargetProperty="(Border.Background).
                      (SolidColorBrush.Color)">
                                            <SplineColorKeyFrame KeyTime="0"
                                         Value="{Binding Source={StaticResource Datacontrol},Path=InteractiveColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="0"
                                                 Duration="00:00:00.001"
                                                 Storyboard.TargetProperty="(UIElement.Opacity)"
                                                 Storyboard.TargetName="Highlight">
                                            <SplineDoubleKeyFrame KeyTime="0"
                                          Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames BeginTime="0"
                                                Duration="00:00:00.001"
                                                Storyboard.TargetName="BackgroundGradient"
                                                Storyboard.TargetProperty="(Border.Background).
                    (GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0"
                                         Value="#F4FFFFFF" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames BeginTime="0"
                                                Duration="00:00:00.001"
                                                Storyboard.TargetName="BackgroundGradient"
                                                Storyboard.TargetProperty="(Border.Background).
                    (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0"
                                         Value="#EAFFFFFF" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames BeginTime="0"
                                                Duration="00:00:00.001"
                                                Storyboard.TargetName="BackgroundGradient"
                                                Storyboard.TargetProperty="(Border.Background).
                    (GradientBrush.GradientStops)[2].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0"
                                         Value="#C6FFFFFF" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames BeginTime="0"
                                                Duration="00:00:00.001"
                                                Storyboard.TargetName="BackgroundGradient"
                                                Storyboard.TargetProperty="(Border.Background).
                    (GradientBrush.GradientStops)[3].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0"
                                         Value="#6BFFFFFF" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid Background="#11FFFFFF"
                FlowDirection="LeftToRight"
                HorizontalAlignment="Center"
                Height="18"
                Margin="0"
                VerticalAlignment="Center"
                Width="19">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="20*" />
                                <ColumnDefinition Width="20*" />
                                <ColumnDefinition Width="20*" />
                                <ColumnDefinition Width="20*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="23*" />
                                <RowDefinition Height="19*" />
                                <RowDefinition Height="19*" />
                                <RowDefinition Height="19*" />
                            </Grid.RowDefinitions>
                            <Border x:Name="Highlight"
                    BorderThickness="1"
                    Grid.ColumnSpan="4"
                    CornerRadius="0,0,1,1"
                    Margin="-1"
                    Opacity="1"
                    Grid.Row="0"
                    Grid.RowSpan="4">
                                <Border.BorderBrush>
                                    <SolidColorBrush Color="{Binding Source={StaticResource Datacontrol},Path=InteractiveColor}" />
                                </Border.BorderBrush>
                            </Border>
                            <Border x:Name="Background"
                    BorderBrush="{Binding Source={StaticResource Datacontrol},Path=BackgroundColor}"
                    BorderThickness="1"
                    Grid.ColumnSpan="4"
                    CornerRadius=".5"
                    Margin="0,-1,0,0"
                    Opacity="1"
                    Grid.Row="1"
                    Grid.RowSpan="3">
                                <Border.Background>
                                    <SolidColorBrush Color="{Binding Source={StaticResource Datacontrol},Path=BackgroundColor}" />
                                </Border.Background>
                            </Border>
                            <Border x:Name="BackgroundGradient"
                    BorderBrush="{Binding Source={StaticResource Datacontrol},Path=SecondaryBaseColor}"
                    BorderThickness="1"
                    Grid.ColumnSpan="4"
                    CornerRadius=".5"
                    Margin="0,-1,0,0"
                    Opacity="1"
                    Grid.Row="1"
                    Grid.RowSpan="3">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint=".7,1"
                                     StartPoint=".7,0">
                                        <GradientStop Color="#FFFFFFFF"
                                Offset="0" />
                                        <GradientStop Color="#F9FFFFFF"
                                Offset="0.375" />
                                        <GradientStop Color="#E5FFFFFF"
                                Offset="0.625" />
                                        <GradientStop Color="#C6FFFFFF"
                                Offset="1" />
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                            <Rectangle Grid.ColumnSpan="4"
                       Grid.RowSpan="1"
                       StrokeThickness="1">
                                <Rectangle.Fill>
                                    <LinearGradientBrush EndPoint="0,1"
                                     StartPoint="0,0">
                                        <GradientStop Color="{Binding Source={StaticResource Datacontrol},Path=SecondaryBaseColor}" />
                                        <GradientStop Color="{Binding Source={StaticResource Datacontrol},Path=SecondaryBaseColor}"
                                Offset="1" />
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                                <Rectangle.Stroke>
                                    <LinearGradientBrush EndPoint="0.48,-1"
                                     StartPoint="0.48,1.25">
                                        <GradientStop Color="#FF494949" />
                                        <GradientStop Color="#FF9F9F9F"
                                Offset="1" />
                                    </LinearGradientBrush>
                                </Rectangle.Stroke>
                            </Rectangle>
                            <Path Fill="#FF2F2F2F"
                  Grid.Row="1"
                  Grid.Column="0"
                  Grid.RowSpan="3"
                  Grid.ColumnSpan="4"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  RenderTransformOrigin="0.5,0.5"
                  Margin="4,3,4,3"
                  Stretch="Fill"
                  Data="M11.426758,8.4305077 L11.749023,8.4305077 
                    L11.749023,16.331387 L10.674805,16.331387 
                    L10.674805,10.299648 L9.0742188,11.298672
                    L9.0742188,10.294277 C9.4788408,10.090176 
                    9.9094238,9.8090878 10.365967,9.4510155 
                    C10.82251,9.0929432 11.176106,8.7527733 
                    11.426758,8.4305077 z M14.65086,8.4305077 
                    L18.566387,8.4305077 L18.566387,9.3435936 
                    L15.671368,9.3435936 L15.671368,11.255703 
                    C15.936341,11.058764 16.27293,10.960293 
                    16.681133,10.960293 C17.411602,10.960293 
                    17.969301,11.178717 18.354229,11.615566 
                    C18.739157,12.052416 18.931622,12.673672
                    18.931622,13.479336 C18.931622,15.452317 
                    18.052553,16.438808 16.294415,16.438808
                    C15.560365,16.438808 14.951641,16.234707 
                    14.468243,15.826504 L14.881817,14.929531
                    C15.368796,15.326992 15.837872,15.525723 
                    16.289043,15.525723 C17.298809,15.525723 
                    17.803692,14.895514 17.803692,13.635098 
                    C17.803692,12.460618 17.305971,11.873379 
                    16.310528,11.873379 C15.83071,11.873379 
                    15.399232,12.079271 15.016094,12.491055
                    L14.65086,12.238613 z" />
                            <Ellipse Grid.ColumnSpan="4"
                     Fill="#FFFFFFFF"
                     HorizontalAlignment="Center"
                     Height="3"
                     StrokeThickness="0"
                     VerticalAlignment="Center"
                     Width="3" />
                            <Border x:Name="DisabledVisual"
                    BorderBrush="#B2FFFFFF"
                    BorderThickness="1"
                    Grid.ColumnSpan="4"
                    CornerRadius="0,0,.5,.5"
                    Opacity="0"
                    Grid.Row="0"
                    Grid.RowSpan="4" />
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type DatePicker}" BasedOn="{StaticResource FontStyle}">
        <Setter Property="IsTodayHighlighted" Value="True" />
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="SelectedDateFormat" Value="Short" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <!--Set CalendarStyle to DatePickerCalendarStyle.-->
        <Setter Property="CalendarStyle" Value="{DynamicResource DatePickerCalendarStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DatePicker}">
                    <Border BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                        <Border.BorderBrush>
                            <LinearGradientBrush EndPoint="0.5,1"
                                 StartPoint="0.5,0">
                                <GradientStop Color="{Binding Source={StaticResource Datacontrol},Path=SecondaryBaseColor}"
                            Offset="0" />
                                <GradientStop Color="{Binding Source={StaticResource Datacontrol},Path=SecondaryBaseColor}"
                            Offset="1" />
                            </LinearGradientBrush>
                        </Border.BorderBrush>
                        <Border.Background>
                            <LinearGradientBrush EndPoint="0.5,1"
                                 StartPoint="0.5,0">
                                <GradientStop Color="{Binding Source={StaticResource Datacontrol},Path=SecondaryBaseColor}"
                            Offset="0" />
                                <GradientStop Color="{Binding Source={StaticResource Datacontrol},Path=SecondaryBaseColor}"
                            Offset="1" />
                            </LinearGradientBrush>
                        </Border.Background>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                   To="1"
                                   Storyboard.TargetProperty="Opacity"
                                   Storyboard.TargetName="PART_DisabledVisual" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="PART_Root"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Button x:Name="PART_Button"
                    Grid.Column="1"
                    Foreground="{TemplateBinding Foreground}"
                    Focusable="False"
                    HorizontalAlignment="Left"
                    Margin="3,0,3,0"
                    Grid.Row="0"
                    Style="{StaticResource DropDownButtonStyle}"
                    VerticalAlignment="Top" />
                            <DatePickerTextBox x:Name="PART_TextBox"
                               Grid.Column="0"
                               Foreground="{TemplateBinding Foreground}"
                               Focusable="{TemplateBinding Focusable}"
                               Background="{Binding Source={StaticResource Datacontrol},Path=BackgroundColor}"
                               HorizontalContentAlignment="Stretch"
                               Grid.Row="0"
                               VerticalContentAlignment="Stretch" />
                            <Grid x:Name="PART_DisabledVisual"
                  Grid.ColumnSpan="2"
                  Grid.Column="0"
                  IsHitTestVisible="False"
                  Opacity="0"
                  Grid.Row="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Rectangle Grid.Column="0"
                         Fill="#A5FFFFFF"
                         RadiusY="1"
                         Grid.Row="0"
                         RadiusX="1" />
                                <Rectangle Grid.Column="1"
                         Fill="#A5FFFFFF"
                         Height="18"
                         Margin="3,0,3,0"
                         RadiusY="1"
                         Grid.Row="0"
                         RadiusX="1"
                         Width="19" />
                                <Popup x:Name="PART_Popup"
                     AllowsTransparency="True"
                     Placement="Bottom"
                     PlacementTarget="{Binding ElementName=PART_TextBox}"
                     StaysOpen="False" />
                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--DataGridStyle-->
    <Style TargetType="{x:Type DataGrid}" >
        <Setter Property="Background" Value="Transparent"/>
    </Style>

    <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource FontStyle}">
        <Setter Property="VerticalContentAlignment"
          Value="Center" />
        <Setter Property="Background" Value="{Binding Source={StaticResource Datacontrol},Path=SecondaryBaseColor}" />
    </Style>


</ResourceDictionary>  
